// <auto-generated />
using System;
using Blog.NETCore.Persistence.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Blog.NETCore.Persistence.EF.Migrations
{
    [DbContext(typeof(BlogNETCoreContext))]
    [Migration("20211124180010_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Blog.NETCore.Domain.Entities.Comment", b =>
                {
                    b.Property<int>("CommentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PostId")
                        .HasColumnType("int");

                    b.HasKey("CommentId");

                    b.HasIndex("PostId");

                    b.ToTable("Comments");

                    b.HasData(
                        new
                        {
                            CommentId = 1,
                            Author = "Kalamaz",
                            Content = "Super, daje 5 gwiazdek",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PostId = 1
                        },
                        new
                        {
                            CommentId = 2,
                            Author = "KawowySmakosz",
                            Content = "Nie podoba mi się, zalecałbym poprawę",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PostId = 1
                        },
                        new
                        {
                            CommentId = 3,
                            Author = "Samalka",
                            Content = "Najlepszy!!",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PostId = 1
                        },
                        new
                        {
                            CommentId = 4,
                            Author = "ElektrykSamouk",
                            Content = "Jak łatwo nauczyć się innego języka?",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PostId = 2
                        },
                        new
                        {
                            CommentId = 5,
                            Author = "Lavazza",
                            Content = "C# Najlepszy!",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PostId = 2
                        },
                        new
                        {
                            CommentId = 6,
                            Author = "HpLover",
                            Content = "Jest to dla mnie najlepsza cześć tego bloga!",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PostId = 3
                        },
                        new
                        {
                            CommentId = 7,
                            Author = "KuchennySmakosz",
                            Content = "Nie bierz się za gotowanie, zdecydowanie nie masz o tym pojęcia",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PostId = 3
                        },
                        new
                        {
                            CommentId = 8,
                            Author = "FanGwiezdnychWojen",
                            Content = "Super dieta, schudłem już 10 kg!",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PostId = 4
                        },
                        new
                        {
                            CommentId = 9,
                            Author = "UveFD",
                            Content = "Wiecej ruchu, a nie diety i każdy z was schudnie",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PostId = 4
                        },
                        new
                        {
                            CommentId = 10,
                            Author = "Omoplata",
                            Content = "Mi się podoba, wyprobuję",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PostId = 4
                        },
                        new
                        {
                            CommentId = 11,
                            Author = "LGFan",
                            Content = "Dlaczego nie pojawił się LG?",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PostId = 5
                        });
                });

            modelBuilder.Entity("Blog.NETCore.Domain.Entities.Post", b =>
                {
                    b.Property<int>("PostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("PostId");

                    b.ToTable("Posts");

                    b.HasData(
                        new
                        {
                            PostId = 1,
                            Content = "Trzeba uczyć się bardzo dużo i systematycznie",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Aby nauka nie poszła w las",
                            ImageUrl = "tinyurl.com/uh9kp3xx",
                            Title = "Jak nauczyć się C# w 3 dni?"
                        },
                        new
                        {
                            PostId = 2,
                            Content = "Dzisiaj krótka lekcja C# dla początkujących którzy chcieli by rozpocząć przygodę z tym oto językiem programowania",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "C# dla nowych adeptów programowania",
                            ImageUrl = "tinyurl.com/uh9kp3xx",
                            Title = "C# dla początkujących"
                        },
                        new
                        {
                            PostId = 3,
                            Content = "Dzisiaj pokaże wam kuchnię dla ludzi opornych, a co za tym idzie dla leniwych i nie posiadających zmysłu kulinarnego",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Gotowanie",
                            ImageUrl = "tinyurl.com/3yj4twea",
                            Title = "Gotwanie dla opornych"
                        },
                        new
                        {
                            PostId = 4,
                            Content = "Dzisiaj pokaże Ci diete dzięki której zgubisz zbędne kilogramy siedząc przed komputerem i pisząc kod",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Dieta",
                            ImageUrl = "tinyurl.com/3yj4twea",
                            Title = "Dieta cud dla programistów, jedz i chudnij"
                        },
                        new
                        {
                            PostId = 5,
                            Content = "Oprócz kodu i gotowania lubię również elektronikę użytkową, dzisiaj zaprezentuję Ci smartfony które według mnie miały najlepszy stosunekjakości do ceny w 2021 roku",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Elektronika",
                            ImageUrl = "tinyurl.com/fvy9pp7m",
                            Title = "Najlepsze smartfony 2021 roku"
                        });
                });

            modelBuilder.Entity("Blog.NETCore.Domain.Entities.Comment", b =>
                {
                    b.HasOne("Blog.NETCore.Domain.Entities.Post", "Post")
                        .WithMany("Comments")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Post");
                });

            modelBuilder.Entity("Blog.NETCore.Domain.Entities.Post", b =>
                {
                    b.Navigation("Comments");
                });
#pragma warning restore 612, 618
        }
    }
}
